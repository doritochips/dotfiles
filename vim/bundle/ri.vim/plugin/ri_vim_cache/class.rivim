= class < Module

(from ruby site)
------------------------------------------------------------------------------
Extends any Class to include <em>json_creatable?</em> method.
Classes in Ruby are first-class objects---each is an instance of class
<tt>Class</tt>.

Typically, you create a new class by using:

  class Name
   # some code describing the class behavior
  end

When a new class is created, an object of type Class is initialized and
assigned to a global constant (<tt>Name</tt> in this case).

When <tt>Name.new</tt> is called to create a new object, the <tt>new</tt>
method in <tt>Class</tt> is run by default. This can be demonstrated by
overriding <tt>new</tt> in <tt>Class</tt>:

  class Class
    alias old_new new
    def new(*args)
      print "Creating a new ", self.name, "\n"
      old_new(*args)
    end
  end

  class Name
  end

  n = Name.new

<em>produces:</em>

  Creating a new Name

Classes, modules, and objects are interrelated. In the diagram that follows,
the vertical arrows represent inheritance, and the parentheses metaclasses.
All metaclasses are instances of the class `Class'.
                           +---------+             +-...
                           |         |             |
           BasicObject-----|-->(BasicObject)-------|-...
               ^           |         ^             |
               |           |         |             |
            Object---------|----->(Object)---------|-...
               ^           |         ^             |
               |           |         |             |
               +-------+   |         +--------+    |
               |       |   |         |        |    |
               |    Module-|---------|--->(Module)-|-...
               |       ^   |         |        ^    |
               |       |   |         |        |    |
               |     Class-|---------|---->(Class)-|-...
               |       ^   |         |        ^    |
               |       +---+         |        +----+
               |                     |
  obj--->OtherClass---------->(OtherClass)-----------...

------------------------------------------------------------------------------
= Class methods:

  .new

= Instance methods:

  allocate, inherited, json_creatable?, new, superclass


(from gem activesupport-4.2.5)
------------------------------------------------------------------------------

------------------------------------------------------------------------------
= Instance methods:

  _stash_object_in_method, _superclass_delegating_accessor, class_attribute,
  singleton_class?, subclasses, superclass_delegating_accessor


